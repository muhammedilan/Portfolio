[{"/home/mrtr/Masaüstü/denemeTahtası/portfolio/src/index.js":"1","/home/mrtr/Masaüstü/denemeTahtası/portfolio/src/App.js":"2","/home/mrtr/Masaüstü/denemeTahtası/portfolio/src/components/AboutMe.js":"3","/home/mrtr/Masaüstü/denemeTahtası/portfolio/src/components/TechStack.js":"4","/home/mrtr/Masaüstü/denemeTahtası/portfolio/src/components/Contact.js":"5","/home/mrtr/Masaüstü/denemeTahtası/portfolio/src/components/Projects.js":"6"},{"size":254,"mtime":1657690427112,"results":"7","hashOfConfig":"8"},{"size":9850,"mtime":1657712134128,"results":"9","hashOfConfig":"8"},{"size":972,"mtime":1657693145920,"results":"10","hashOfConfig":"8"},{"size":4387,"mtime":1657714114402,"results":"11","hashOfConfig":"8"},{"size":2518,"mtime":1657691834850,"results":"12","hashOfConfig":"8"},{"size":1108,"mtime":1657714018424,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"142ujg1",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/home/mrtr/Masaüstü/denemeTahtası/portfolio/src/index.js",[],[],"/home/mrtr/Masaüstü/denemeTahtası/portfolio/src/App.js",["34","35","36","37","38","39","40"],[],"import React, { useRef } from \"react\";\n\nconst Contact = React.lazy(() => import(\"./components/Contact\"));\nconst AboutMe = React.lazy(() => import(\"./components/AboutMe\"));\nconst Projects = React.lazy(() => import(\"./components/Projects\"));\nconst TechStack = React.lazy(() => import(\"./components/TechStack\"));\n\nfunction App() {\n  const navigationList = [\"Home\", \"Projects\", \"About Me\", \"Contact\"];\n\n  const homePage = useRef();\n  const projectsPage = useRef();\n  const aboutMePage = useRef();\n  const contactPage = useRef();\n  return (\n    <div className=\"overflow-hidden\">\n      <header className=\"absolute w-full px-3 sm:px-0  z-10\">\n        <nav className=\"mx-auto relative container justify-between items-center flex h-[55px] sm:h-[75px]\">\n          <div>\n            <h1 className=\"font-semibold text-[18px]\">My Portfolio</h1>\n          </div>\n          <ul className=\"items-center hidden sm:flex gap-x-3 text-[16px] \">\n            {navigationList.map((nav, index) => {\n              return (\n                <li\n                  key={index}\n                  onClick={() => {\n                    if (index === 0) {\n                      homePage.current.scrollIntoView();\n                    }\n                    if (index == 1) {\n                      projectsPage.current.scrollIntoView();\n                    }\n                    if (index == 2) {\n                      aboutMePage.current.scrollIntoView();\n                    }\n                    if (index == 3) {\n                      contactPage.current.scrollIntoView();\n                    }\n                  }}\n                  className=\"cursor-pointer p-[14px] font-medium hover:text-[#0ca6ff] relative hover:before:w-full before:bg-[#0ca6ff] before:absolute before:bottom-0 before:right-0 hover:before:left-0 before:w-0 before:transition-all before:rounded-full transition duration-300 before:duration-300 before:h-[3px]\"\n                >\n                  {nav}\n                </li>\n              );\n            })}\n          </ul>\n          <div className=\"sm:hidden\">\n            <div\n              className=\"w-[28px] mobileNavBtn flex cursor-pointer z-10 flex-col gap-y-[3px] relative\"\n              onClick={(e) => {\n                e.currentTarget.children[0].classList.toggle(\"bg-black\");\n                e.currentTarget.children[0].classList.toggle(\"bg-[#0ca6ff]\");\n                e.currentTarget.children[0].classList.toggle(\"rotate-[-45deg]\");\n                e.currentTarget.children[0].classList.toggle(\n                  \"translate-y-[6px]\"\n                );\n                e.currentTarget.children[1].classList.toggle(\n                  \"translate-x-[-45px]\"\n                );\n                e.currentTarget.children[1].classList.toggle(\"bg-transparent\");\n\n                e.currentTarget.children[2].classList.toggle(\"bg-black\");\n                e.currentTarget.children[2].classList.toggle(\"bg-[#0ca6ff]\");\n                e.currentTarget.children[2].classList.toggle(\"rotate-[45deg]\");\n                e.currentTarget.children[2].classList.toggle(\n                  \"translate-y-[-6px]\"\n                );\n                let mobileNavDropdown =\n                  document.getElementsByClassName(\"mobileNavDropdown\")[0];\n                mobileNavDropdown.classList.toggle(\"hidden\");\n              }}\n            >\n              <span className=\"bg-black w-full transition z-10 duration-300 rounded-full  h-[3px]\"></span>\n              <span className=\"bg-black w-full transition z-10 duration-300 rounded-full  h-[3px]\"></span>\n              <span className=\"bg-black w-full transition z-10 duration-300 rounded-full h-[3px]\"></span>\n            </div>\n            <div className=\"bg-white font-medium mobileNavDropdown flex items-center justify-center hidden w-[100vw] absolute top-0 right-0 h-[100vh]\">\n              <div className=\"flex flex-col gap-y-3 w-full px-10\">\n                {navigationList.map((nav, index) => {\n                  return (\n                    <button\n                      key={index}\n                      onClick={() => {\n                        let mobileNavBtn =\n                          document.getElementsByClassName(\"mobileNavBtn\")[0];\n                        mobileNavBtn.classList.toggle(\"mr-2\");\n\n                        mobileNavBtn.children[0].classList.toggle(\"bg-black\");\n                        mobileNavBtn.children[0].classList.toggle(\n                          \"bg-[#0ca6ff]\"\n                        );\n                        mobileNavBtn.children[0].classList.toggle(\n                          \"rotate-[-45deg]\"\n                        );\n                        mobileNavBtn.children[0].classList.toggle(\n                          \"translate-y-[6px]\"\n                        );\n                        mobileNavBtn.children[1].classList.toggle(\n                          \"translate-x-[-45px]\"\n                        );\n                        mobileNavBtn.children[1].classList.toggle(\n                          \"bg-transparent\"\n                        );\n\n                        mobileNavBtn.children[2].classList.toggle(\"bg-black\");\n                        mobileNavBtn.children[2].classList.toggle(\n                          \"bg-[#0ca6ff]\"\n                        );\n                        mobileNavBtn.children[2].classList.toggle(\n                          \"rotate-[45deg]\"\n                        );\n                        mobileNavBtn.children[2].classList.toggle(\n                          \"translate-y-[-6px]\"\n                        );\n\n                        let mobileNavDropdown =\n                          document.getElementsByClassName(\n                            \"mobileNavDropdown\"\n                          )[0];\n                        mobileNavDropdown.classList.toggle(\"hidden\");\n\n                        if (index == 0) {\n                          homePage.current.scrollIntoView();\n                        }\n                        if (index == 1) {\n                          projectsPage.current.scrollIntoView();\n                        }\n                        if (index == 2) {\n                          aboutMePage.current.scrollIntoView();\n                        }\n                        if (index == 3) {\n                          contactPage.current.scrollIntoView();\n                        }\n                      }}\n                      className=\"w-full rounded-full h-[40px] hover:bg-[#0ca6ff] hover:text-white text-[#0ca6ff] ring-2 ring-[#0ca6ff] bg-white\"\n                    >\n                      {nav}\n                    </button>\n                  );\n                })}\n                <button\n                  onClick={() => {\n                    let mobileNavBtn =\n                      document.getElementsByClassName(\"mobileNavBtn\")[0];\n\n                    contactPage.current.scrollIntoView();\n\n                    mobileNavBtn.classList.toggle(\"mr-2\");\n\n                    mobileNavBtn.children[0].classList.toggle(\"bg-black\");\n                    mobileNavBtn.children[0].classList.toggle(\"bg-[#0ca6ff]\");\n                    mobileNavBtn.children[0].classList.toggle(\n                      \"rotate-[-45deg]\"\n                    );\n                    mobileNavBtn.children[0].classList.toggle(\n                      \"translate-y-[6px]\"\n                    );\n                    mobileNavBtn.children[1].classList.toggle(\n                      \"translate-x-[-45px]\"\n                    );\n                    mobileNavBtn.children[1].classList.toggle(\"bg-transparent\");\n\n                    mobileNavBtn.children[2].classList.toggle(\"bg-black\");\n                    mobileNavBtn.children[2].classList.toggle(\"bg-[#0ca6ff]\");\n                    mobileNavBtn.children[2].classList.toggle(\"rotate-[45deg]\");\n                    mobileNavBtn.children[2].classList.toggle(\n                      \"translate-y-[-6px]\"\n                    );\n                    let mobileNavDropdown =\n                      document.getElementsByClassName(\"mobileNavDropdown\")[0];\n                    mobileNavDropdown.classList.toggle(\"hidden\");\n                  }}\n                  className=\"w-full mt-10 rounded-full h-[40px] hireMeBtn hover:bg-[#0ca6ff] hover:text-white text-[#0ca6ff] ring-2 ring-[#0ca6ff] bg-white\"\n                >\n                  Hire Me\n                </button>\n              </div>\n            </div>\n          </div>\n          <button\n            onClick={() => contactPage.current.scrollIntoView()}\n            className=\"w-[110px] hidden sm:block h-[35px] text-[16px] sm:h-[40px] hireMeBtn rounded-full ring-1 transition duration-300 ring-[#0ca6ff] text-[#0ca6ff] hover:bg-[#0ca6ff] hover:text-white font-medium\"\n          >\n            Hire Me\n          </button>\n        </nav>\n      </header>\n      <main className=\"bg-white \">\n        <div\n          ref={homePage}\n          className=\"h-[100vh] flex px-3 sm:px-0 flex-col sm:flex-row justify-between items-center mx-auto container\"\n        >\n          <div className=\"w-full sm:w-1/2 pt-[90px]  sm:pt-0\">\n            <h1 className=\"font-semibold text-[22px] sm:text-[27px] md:text-[36px]\">\n              Hello I am Muhammed Welcome to my portfolio I am looking for a job\n              as a Frontend Developer\n            </h1>\n            <p className=\"font-medium text-[17px] sm:text-[17.5px] opacity-70 mt-4\">\n              I am Muhammed Ilan, I have been interested in website technologies\n              for a long time, I am experienced not only in frontend but also\n              backend, but my main field is frontend.\n            </p>\n          </div>\n          <TechStack />\n        </div>\n        <div ref={projectsPage}>\n          <Projects />\n        </div>\n        <div ref={aboutMePage}>\n          <AboutMe />\n        </div>\n        <div ref={contactPage}>\n          <Contact />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","/home/mrtr/Masaüstü/denemeTahtası/portfolio/src/components/AboutMe.js",[],[],"/home/mrtr/Masaüstü/denemeTahtası/portfolio/src/components/TechStack.js",[],[],"/home/mrtr/Masaüstü/denemeTahtası/portfolio/src/components/Contact.js",[],[],"/home/mrtr/Masaüstü/denemeTahtası/portfolio/src/components/Projects.js",["41"],[],"import React from \"react\";\nimport xoxSiteImage from \"../assets/image/xox-min.png\";\n\nconst Projects = () => {\n  return (\n    <div className=\"h-[100vh] mx-auto container px-3 sm:px-0\">\n      <h1 className=\"text-center font-semibold pt-4 mb-[50px] text-[22px] sm:text-[24px] \">\n        My Projects\n      </h1>\n      <div className=\"flex flex-col items-center sm:flex-row justify-between\">\n        <a\n          className=\"w-[320px] h-[290px] hover:scale-110 transition hover:text-[#0ca6ff] duration-200 bg-white rounded-[14px] shadow-2xl \"\n          href=\"https://github.com/muhammedilan/Tic-Tac-Toe\"\n        >\n          <img\n            className=\"h-[225px] w-[320px] rounded-[14px] rounded-b-none\"\n            width={320}\n            height={225}\n            src={xoxSiteImage}\n            loading=\"lazy\"\n            alt=\"Xox Website Image\"\n          />\n          <div className=\"h-[65px] font-medium flex items-center justify-center text-[17.5px] rounded-[14px] rounded-t-none w-[320px]\">\n            Javascript Xox Game\n          </div>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n",{"ruleId":"42","severity":1,"message":"43","line":31,"column":31,"nodeType":"44","messageId":"45","endLine":31,"endColumn":33},{"ruleId":"42","severity":1,"message":"43","line":34,"column":31,"nodeType":"44","messageId":"45","endLine":34,"endColumn":33},{"ruleId":"42","severity":1,"message":"43","line":37,"column":31,"nodeType":"44","messageId":"45","endLine":37,"endColumn":33},{"ruleId":"42","severity":1,"message":"43","line":123,"column":35,"nodeType":"44","messageId":"45","endLine":123,"endColumn":37},{"ruleId":"42","severity":1,"message":"43","line":126,"column":35,"nodeType":"44","messageId":"45","endLine":126,"endColumn":37},{"ruleId":"42","severity":1,"message":"43","line":129,"column":35,"nodeType":"44","messageId":"45","endLine":129,"endColumn":37},{"ruleId":"42","severity":1,"message":"43","line":132,"column":35,"nodeType":"44","messageId":"45","endLine":132,"endColumn":37},{"ruleId":"46","severity":1,"message":"47","line":15,"column":11,"nodeType":"48","endLine":22,"endColumn":13},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]